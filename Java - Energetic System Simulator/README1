Nume: Dutu Alin Calin
Grupa: 323 CD

    Aceasta este rezolvarea primei etape a proiectului la Programare Orientata pe Obiecte in cadrul anului
universitar 2020 - 2021.

1) Proiectul contine:
- Folderul src cu toate pachetele programului
- README

2) Detalii legate de continut:
    In folderul "src" se afla pachetele: "actions" care contine toate functiile de prelucrare a datelor, "checker"
care contine functiile pentru Check-style, "common" unde se afla clasa de constante, "patterns" unde se gasesc
functiile pentru factory pattern, "input" unde se gasesc clasele si functiile pentru preluarea inputului dintr-un json,
"instances" unde sunt clasele instantelor cu care se lucreaza, "main" unde se gaseste centrul de comanda si checker-ul
si in "output" clasele si functiile pentru crearea fisierului de output.

3) Functionarea programului:
    Programul incepe din main unde se va apela instanta input folosind Factory pattern-ul cu numele IO. In interiorul
instantei de input se va apela metoda Jackson care va folosi clasele din pachetul "input" ca sa parseze datele.
De asemenea, se va folosi Singleton Pattern pentru instanta care va retine datele din JSON-ul de la input pentru a putea
fi accesat mai usor din main de unde se va folosi clasa JSONtoDataConverter care va pune datele din instanta in liste de
clienti, distribuitori si updates - pentru actualizarile lunare. Se vor itera prin n + 1 runde unde n este numarul de
runde ale jocului, prima runda fiind chiar runda initiala.
    In runda initiala se calculeaza preturile distribuitorilor, se ofera salariile clientilor, se verifica daca un
distribuitor a dat faliment. Urmeaza crearea, eliminarea sau reinnoirea contractelor clientilor si apoi plata
contractelor, urmand ca distribuitorii sa incaseze veniturile din platile clientilor. La finalul rundei se verifica daca
exista clienti care au dat faliment. Restul rundelor mai au ca actiuni: verificarea distribuitorilor, actualizarea
costurilor pentru distribuitori si inca o verificare a clientilor. Dupa aceste 3 actiuni urmeaza apoi sa se execute
aceleasi actiuni ca cele ale rundei initiale.
    Dupa finalizarea tutror rundelor se face acelasi proces ca la input doar ca de la cap la coada. Se pun toate datele
din lista intr-o instanta cu ajutorul careia se vor insera date in fisierul de output. Folosind Factory Pattern se
creeaza instanta de output. Aici se preiau datele de output preluand instanta cu datele de output cu ajutorul Singleton
Pattern si in final, cu ajutorul metodei Jackson si cu ajutorul claselor din pachetul "output" se pun datele prelucrate
in fisierul de output.

4) Patterns:
    S-au folosit in acest program: Singleton Pattern pentru clasele LoaderIn si LoaderOut cu scopul de a apela o singura
instanta din locuri diferite si Factory Pattern pentru clasele Input si Output cu scopul de a obtine si apela mai usor
obiectele si functiile acestora.

